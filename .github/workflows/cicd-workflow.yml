# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

run-name: ${{ github.actor }} is learning GitHub Actions

env:
  PYTHON_VERSION_37: 3.7.5
  PYTHON_VERSION_38: 3.8.9

on:
  push:
    branches:
      - 'main'
  pull_request:
    branches:
      - 'main'
  
  workflow_dispatch:
    inputs:
      SKIP_UNIT_TESTS:
        description: 'Skip unit tests'
        type: boolean
        required: true
        default: false

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-20.04

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{github.ref}}

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: |
            ${{env.PYTHON_VERSION_37}} 
            ${{env.PYTHON_VERSION_38}} 

      # - name: Install dependencies
      #   run: |
      #     python -m pip install --upgrade pip
      #     pip install flake8
      #     if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      # - name: Lint with flake8
      #   run: |
      #     # stop the build if there are Python syntax errors or undefined names
      #     flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
      #     # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
      #     flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics > output.log

      - name: Test with pytest
        env:
          SKIP_TESTS: ${{github.event.inputs.SKIP_UNIT_TESTS}}
          LANGUAGE: de_DE.UTF-8
          LANG: de_DE.UTF-8
        run: |
          #!/bin/bash -e
          echo "$SKIP_TESTS"
          sudo locale-gen ${{env.LANG}}
          sudo update-locale LANG=${{env.LANG}}
          echo "========="
          ls -a $HOME
          mkdir "$HOME/.gem"
          echo $GEM_HOME
          export GEM_HOME="$HOME/.gem" 
          echo $GEM_HOME
          echo "========="
          make test

      # - name: Upload output file
      #   uses: actions/upload-artifact@v4
      #   with:
      #     name: output-log-file
      #     path: output.log
